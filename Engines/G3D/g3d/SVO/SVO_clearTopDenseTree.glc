#version 430
/**
  \file data-files/shader/SVO/SVO_clearTopDenseTree.glc

  G3D Innovation Engine http://casual-effects.com/g3d
  Copyright 2000-2019, Morgan McGuire
  All rights reserved
  Available under the BSD License
*/

#extension GL_NV_gpu_shader5 : require
#extension GL_NV_shader_thread_group : require

#expect WORK_GROUP_SIZE_X
#expect WORK_GROUP_SIZE_Y

layout (local_size_x = WORK_GROUP_SIZE_X, local_size_y = WORK_GROUP_SIZE_Y, local_size_z = 1) in;


#include <SVO/SVO.glsl>


uniform bool	resetPoolAllocation;
uniform int		curSvoId;
uniform uint	topDenseTreeNumNodes;

//coherent volatile uniform uint			*d_rootIndexBuffer;	//New
//coherent volatile uniform uint			*d_childIndexBuffer;
//coherent volatile uniform uint			*d_parentIndexBuffer;


void main() {

	uint offset = svoGetRootLocation(curSvoId); //d_rootIndexBuffer[curSvoId];

	uint threadIndex = (gl_WorkGroupID.x + gl_WorkGroupID.y * gl_NumWorkGroups.x) * (WORK_GROUP_SIZE_X * WORK_GROUP_SIZE_Y) + gl_LocalInvocationID.x + gl_LocalInvocationID.y * WORK_GROUP_SIZE_X;

	uint poolOffset = offset+threadIndex;

#if 1 //clear
	if(threadIndex<topDenseTreeNumNodes){
		d_childIndexBuffer[ poolOffset ]		= 0;
		d_parentIndexBuffer[ (poolOffset)/8 ]	= 0;
	}
#else  //Init

#endif

}
