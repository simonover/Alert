#version 410
/**
  \file data-files/shader/Film/Film_bloomExpose.pix

  This is the bloom input.  It is not used if there is no bloom.

  G3D Innovation Engine http://casual-effects.com/g3d
  Copyright 2000-2019, Morgan McGuire
  All rights reserved
  Available under the BSD License
*/
#include <compatibility.glsl>
#include <g3dmath.glsl>
#include <Texture/Texture.glsl>
#include "Film_toneMap.glsl"

uniform_Texture(sampler2D, sourceTexture_);
uniform int         ySign, yOffset;
uniform float       sensitivity;
uniform int2        guardBandSize;

uniform sampler2D   toneCurve;

in vec2             g3d_TexCoord;

out vec3            result;

#expect COMPUTE_PERCENT "integer screen fraction percent (as a disk radius) within which to render. used for VR. <= 0 to disable"

void main() {
    // VR cropping
#   if COMPUTE_PERCENT > 0
        if (square(gl_FragCoord.x - g3d_FragCoordExtent.x * 0.5) + square(gl_FragCoord.y - g3d_FragCoordExtent.y * 0.5) > square(0.005 * float(COMPUTE_PERCENT) * max(g3d_FragCoordExtent.x, g3d_FragCoordExtent.y))) {
            discard;
        }
#   endif

    int2 coord = int2(g3d_TexCoord.st * g3d_FragCoordExtent) + guardBandSize;
    coord.y = coord.y * ySign + yOffset;
    float3 radiance = texelFetch(sourceTexture_buffer, coord, 0).rgb;
    radiance = toneMap(radiance, sensitivity, toneCurve) * 1.5;

    // Nonlinear curving based on brightest component after tonemapping
    // to avoid blowing out
    radiance *= smoothstep(1.0, 7.0, maxComponent(radiance));

    result = radiance;
}